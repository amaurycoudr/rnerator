import { expect } from 'chai';
import { testClass } from '../helpers/utils';
import SandboxFilesContent from '../../src/sandbox/SandboxFilesContent';

const emptySandboxFilesContentTS =
  '// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n' +
  '/* eslint global-require: off */\n' +
  "import { FC } from 'react'\ntype SandBoxInfo = { name: string; location: string; component: FC };\n" +
  'const data: SandBoxInfo[] = [];\nexport default data;';

const oneElementSandboxFilesContentTS =
  '// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n' +
  '/* eslint global-require: off */\n' +
  "import { FC } from 'react'\ntype SandBoxInfo = { name: string; location: string; component: FC };\n" +
  'const data: SandBoxInfo[] = [{name:"test",location:"../test.sandbox.tsx",component: require("../test.sandbox.tsx").default}];\nexport default data;';

const emptySandboxFilesContentJS =
  '// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n' +
  '/* eslint global-require: off */\n' +
  'const data = [];\nexport default data;';

const oneElementSandboxFilesContentJS =
  '// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n' +
  '/* eslint global-require: off */\n' +
  'const data = [{name:"test",location:"../test.sandbox.jsx",component: require("../test.sandbox.jsx").default}];\nexport default data;';

describe(testClass(SandboxFilesContent), () => {
  it('should return the emptySandboxFilesContentTS when paths is [] and extension is ts', () => {
    expect(new SandboxFilesContent([], 'ts').content).to.equal(
      emptySandboxFilesContentTS
    );
  });
  it('should return the emptySandboxFilesContentJS when paths is [] and extension is js', () => {
    expect(new SandboxFilesContent([], 'js').content).to.equal(
      emptySandboxFilesContentJS
    );
  });
  it('should return the oneElementSandboxFilesContentTS when paths is ["src/test.sandbox.tsx"] and extension is ts', () => {
    expect(
      new SandboxFilesContent(['src/test.sandbox.tsx'], 'ts').content
    ).to.equal(oneElementSandboxFilesContentTS);
  });
  it('should return the oneElementSandboxFilesContentJS when paths is ["src/test.sandbox.jsx"] and extension is js', () => {
    expect(
      new SandboxFilesContent(['src/test.sandbox.jsx'], 'js').content
    ).to.equal(oneElementSandboxFilesContentJS);
  });
});
